% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geos_binary_pred.R, R/geom-predicates.R
\name{geos_binary_pred}
\alias{geos_binary_pred}
\alias{st_disjoint}
\alias{st_touches}
\alias{st_crosses}
\alias{st_within}
\alias{st_overlaps}
\alias{st_covers}
\alias{st_covered_by}
\alias{st_is_within_distance}
\title{Geometric binary predicates on pairs of simple feature geometry sets}
\usage{
st_disjoint(x, y = x, sparse = TRUE, prepared = TRUE)

st_touches(x, y, sparse = TRUE, prepared = TRUE, ...)

st_crosses(x, y, sparse = TRUE, prepared = TRUE, ...)

st_within(x, y, sparse = TRUE, prepared = TRUE, ...)

st_overlaps(x, y, sparse = TRUE, prepared = TRUE, ...)

st_covers(x, y, sparse = TRUE, prepared = TRUE, ..., model = "closed")

st_covered_by(x, y = x, sparse = TRUE, prepared = TRUE, ..., model = "closed")

st_is_within_distance(x, y = x, dist, sparse = TRUE, ...)
}
\arguments{
\item{dist}{distance threshold; geometry indexes with distances smaller or equal to this value are returned; numeric value or units value having distance units.}
}
\description{
For most predicates, a spatial index is built on argument \code{x};
see \url{https://r-spatial.org/r/2017/06/22/spatial-index.html}.

If \code{prepared = TRUE}, \code{x} contains POINT geometries, and \code{y} contains polygons,
then the polygon geometries are prepared, rather than the points.
}
\examples{
pts = st_sfc(st_point(c(.5,.5)), st_point(c(1.5, 1.5)), st_point(c(2.5, 2.5)))
pol = st_polygon(list(rbind(c(0,0), c(2,0), c(2,2), c(0,2), c(0,0))))
(lst = st_intersects(pts, pol))
(mat = st_intersects(pts, pol, sparse = FALSE))
# which points fall inside a polygon?
apply(mat, 1, any)
lengths(lst) > 0
# which points fall inside the first polygon?
st_intersects(pol, pts)[[1]]
# remove duplicate geometries:
p1 = st_point(0:1)
p2 = st_point(2:1)
p = st_sf(a = letters[1:8], geom = st_sfc(p1, p1, p2, p1, p1, p2, p2, p1))
st_equals(p)
st_equals(p, remove_self = TRUE)
(u = st_equals(p, retain_unique = TRUE))
# retain the records with unique geometries:
p[-unlist(u),]
}
\seealso{
Other geometric binary predicates for two spatial objects: 
\code{\link{st_contains}()},
\code{\link{st_equals}()},
\code{\link{st_intersects}()}
}
\concept{geometric binary predicates for two spatial objects}
